---
# The tekton-dream Pipeline will run through several tasks:
# - source is pulled from git
# - conditions say go test must pass before moving on
# - source is built into an image by img
# - image output is pushed to ECR
# - cloudevent emitted
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: tekton-dream-pipeline
  namespace: tekton-dream
spec:
  resources:
    - name: source-repo
      type: git
    - name: image-source
      type: image
  tasks:
    - name: build-docker-image
      taskRef:
        name: build-docker-image
      conditions:
      - conditionRef: go-test
        resources:
          - name: source-repo
            resource: source-repo
      params:
        - name: pathToContext
          value: /workspace/source-repo
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: builtImage
            resource: image-source
    - name: deploy-locally
      taskRef:
        name: deploy-locally
      resources:
        inputs:
          - name: image-source
            resource: image-source
            from:
              - build-docker-image
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-locally
  namespace: tekton-dream
spec:
  inputs:
    resources:
      - name: image-source
        type: image
  steps:
    - name: run-kubectl
      image: lachlanevenson/k8s-kubectl
      command: ["kubectl"]
      args:
        - "run"
        - "tekton-triggers-built-me"
        - "--image"
        - "$(inputs.resources.image-source.url)"
        - "--env=PORT=8080"
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-docker-image
  namespace: tekton-dream
spec:
  inputs:
    resources:
      - name: source-repo
        type: git
    params:
      - name: pathToContext
        description:
          The build directory used by img
        default: /workspace/source-repo
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: build-and-push
      image: r.j3ss.co/img
      command:
        - /usr/bin/img
      args:
        - build
        - -t
        - "$(outputs.resources.builtImage.url)"
        - --no-cache
        - "$(inputs.params.pathToContext)"
---
apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: go-test
  namespace: tekton-dream
spec:
  resources:
    - name: source-repo
      type: git
  check:
    image: golang
    workingDir: "$(inputs.resources.source-repo.path)"
    command: ["go"]
    args: ['test', "./..."]
